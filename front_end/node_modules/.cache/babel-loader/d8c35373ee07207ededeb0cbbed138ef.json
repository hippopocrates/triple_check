{"ast":null,"code":"import _classCallCheck from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carolinerussell/projects/triple_check/front_end/src/components/Search.js\";\nimport _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment } from \"semantic-ui-react\";\nvar initialState = {\n  isLoading: false,\n  results: [],\n  value: \"\"\n};\n\nvar source = _.times(5, function () {\n  return {\n    title: faker.company.companyName(),\n    description: faker.company.catchPhrase(),\n    image: faker.internet.avatar(),\n    price: faker.finance.amount(0, 100, 2, \"$\")\n  };\n});\n\nvar SearchExampleStandard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchExampleStandard, _Component);\n\n  function SearchExampleStandard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchExampleStandard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchExampleStandard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialState;\n\n    _this.handleResultSelect = function (e, _ref) {\n      var result = _ref.result;\n      return _this.setState({\n        value: result.title\n      });\n    };\n\n    _this.handleSearchChange = function (e, _ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        isLoading: true,\n        value: value\n      });\n\n      setTimeout(function () {\n        if (_this.state.value.length < 1) return _this.setState(initialState);\n        var re = new RegExp(_.escapeRegExp(_this.state.value), \"i\");\n\n        var isMatch = function isMatch(result) {\n          return re.test(result.title);\n        };\n\n        _this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchExampleStandard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Search, Object.assign({\n        loading: isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.handleSearchChange, 500, {\n          leading: true\n        }),\n        results: results,\n        value: value\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))), React.createElement(Grid.Column, {\n        width: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"pre\", {\n        style: {\n          overflowX: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, JSON.stringify(this.state, null, 2)), React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Options\"), React.createElement(\"pre\", {\n        style: {\n          overflowX: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, JSON.stringify(source, null, 2)))));\n    }\n  }]);\n\n  return SearchExampleStandard;\n}(Component);\n\nexport { SearchExampleStandard as default };","map":{"version":3,"sources":["/Users/carolinerussell/projects/triple_check/front_end/src/components/Search.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","initialState","isLoading","results","value","source","times","title","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","SearchExampleStandard","state","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","debounce","leading","props","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment } from \"semantic-ui-react\";\n\nconst initialState = { isLoading: false, results: [], value: \"\" };\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, \"$\")\n}));\n\nexport default class SearchExampleStandard extends Component {\n  state = initialState;\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState);\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = result => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true\n            })}\n            results={results}\n            value={value}\n            {...this.props}\n          />\n        </Grid.Column>\n        <Grid.Column width={10}>\n          <Segment>\n            <Header>State</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(this.state, null, 2)}\n            </pre>\n            <Header>Options</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(source, null, 2)}\n            </pre>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}