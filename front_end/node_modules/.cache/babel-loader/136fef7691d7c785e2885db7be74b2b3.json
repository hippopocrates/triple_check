{"ast":null,"code":"import _classCallCheck from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carolinerussell/projects/triple_check/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carolinerussell/projects/triple_check/front_end/src/components/AddReview.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport faker from \"faker\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nvar AddReview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddReview, _React$Component);\n\n  function AddReview(props) {\n    var _this;\n\n    _classCallCheck(this, AddReview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddReview).call(this, props));\n\n    _this.onChangeAuthor = function (e) {\n      _this.setState({\n        author: e.target.value\n      });\n    };\n\n    _this.onChangeRating = function (e) {\n      _this.setState({\n        rating: e.target.value\n      });\n    };\n\n    _this.onChangeRate = function (e) {\n      _this.setState({\n        rate: e.target.value\n      });\n    };\n\n    _this.onChangeReview = function (e) {\n      _this.setState({\n        review: e.target.value\n      });\n    };\n\n    _this.setDate = function () {\n      var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var currentDate = new Date();\n      var date = currentDate.getDate();\n      var month = currentDate.getMonth() + 1;\n      var year = currentDate.getFullYear();\n      var finalDate = monthNames[month] + \" \" + date + \" \" + year;\n      return finalDate;\n    };\n\n    _this.setTime = function () {\n      var currentDate = new Date();\n      var hour = currentDate.getHours();\n      var minute = currentDate.getMinutes();\n      var finalTime = hour + \":\" + minute;\n      return finalTime;\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setDateAndTime();\n\n      var params = {\n        newReview: {\n          author: _this.state.author,\n          avatar: faker.image.avatar(),\n          rating: _this.state.rating,\n          rate: _this.state.rate,\n          review: _this.state.review,\n          date: _this.setDate(),\n          time: _this.setTime()\n        },\n        id: _this.props.instructorId\n      };\n      axios.patch(\"http://localhost:4000/instructors/\" + _this.props.instructorId, params).then(function (res) {\n        console.log(\"axios res.data newReview:\", res.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      author: \"\",\n      avatar: \"\",\n      rating: 0,\n      rate: 0,\n      review: \"\",\n      date: \"\",\n      time: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddReview, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        style: {\n          marginTop: \"20px\"\n        },\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(\"input\", {\n        value: this.state.author,\n        onChange: this.onChangeAuthor,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Rating:\"), React.createElement(\"input\", {\n        value: this.state.rating,\n        onChange: this.onChangeRating,\n        placeholder: \"Rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Hourly Rate:\"), React.createElement(\"input\", {\n        value: this.state.rate,\n        onChange: this.onChangeRate,\n        placeholder: \"Hourly Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        value: this.state.review,\n        onChange: this.onChangeReview,\n        control: TextArea,\n        label: \"Review\",\n        placeholder: \"Tell us about your experience...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return AddReview;\n}(React.Component);\n\nexport default AddReview;","map":{"version":3,"sources":["/Users/carolinerussell/projects/triple_check/front_end/src/components/AddReview.js"],"names":["React","axios","faker","Button","Form","TextArea","AddReview","props","onChangeAuthor","e","setState","author","target","value","onChangeRating","rating","onChangeRate","rate","onChangeReview","review","setDate","monthNames","currentDate","Date","date","getDate","month","getMonth","year","getFullYear","finalDate","setTime","hour","getHours","minute","getMinutes","finalTime","onSubmit","preventDefault","setDateAndTime","params","newReview","state","avatar","image","time","id","instructorId","patch","then","res","console","log","data","catch","err","marginTop","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport faker from \"faker\";\nimport { Button, Form, TextArea } from \"semantic-ui-react\";\n\nclass AddReview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: \"\",\n      avatar: \"\",\n      rating: 0,\n      rate: 0,\n      review: \"\",\n      date: \"\",\n      time: \"\"\n    };\n  }\n\n  onChangeAuthor = e => {\n    this.setState({\n      author: e.target.value\n    });\n  };\n\n  onChangeRating = e => {\n    this.setState({\n      rating: e.target.value\n    });\n  };\n\n  onChangeRate = e => {\n    this.setState({\n      rate: e.target.value\n    });\n  };\n\n  onChangeReview = e => {\n    this.setState({\n      review: e.target.value\n    });\n  };\n\n  setDate = () => {\n    let monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n\n    let currentDate = new Date();\n    let date = currentDate.getDate();\n    let month = currentDate.getMonth() + 1;\n    let year = currentDate.getFullYear();\n    let finalDate = monthNames[month] + \" \" + date + \" \" + year;\n\n    return finalDate;\n  };\n\n  setTime = () => {\n    let currentDate = new Date();\n    let hour = currentDate.getHours();\n    let minute = currentDate.getMinutes();\n    let finalTime = hour + \":\" + minute;\n\n    return finalTime;\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.setDateAndTime();\n\n    const params = {\n      newReview: {\n        author: this.state.author,\n        avatar: faker.image.avatar(),\n        rating: this.state.rating,\n        rate: this.state.rate,\n        review: this.state.review,\n        date: this.setDate(),\n        time: this.setTime()\n      },\n      id: this.props.instructorId\n    };\n\n    axios\n      .patch(\n        \"http://localhost:4000/instructors/\" + this.props.instructorId,\n        params\n      )\n      .then(res => {\n        console.log(\"axios res.data newReview:\", res.data);\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Form style={{ marginTop: \"20px\" }} onSubmit={this.onSubmit}>\n        <Form.Field>\n          <label>Name:</label>\n          <input\n            value={this.state.author}\n            onChange={this.onChangeAuthor}\n            placeholder=\"Name\"\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Rating:</label>\n          <input\n            value={this.state.rating}\n            onChange={this.onChangeRating}\n            placeholder=\"Rating\"\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Hourly Rate:</label>\n          <input\n            value={this.state.rate}\n            onChange={this.onChangeRate}\n            placeholder=\"Hourly Rate\"\n          />\n        </Form.Field>\n        <Form.Field\n          value={this.state.review}\n          onChange={this.onChangeReview}\n          control={TextArea}\n          label=\"Review\"\n          placeholder=\"Tell us about your experience...\"\n        />\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default AddReview;\n"]},"metadata":{},"sourceType":"module"}